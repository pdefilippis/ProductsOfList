@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = ViewData["RequestCulture"] as System.Globalization.CultureInfo;
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new { Value = c.Name, Text = c.TwoLetterISOLanguageName })
        .OrderBy(item => item.Text)
        .ToList();
}

<input hidden="hidden" value="@requestCulture.Name" id="current-culture" />
<input hidden="hidden" value="@requestCulture.TwoLetterISOLanguageName" id="current-culture-short" />

<li class="dropdown">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@SharedLocalizer["Language"]:&nbsp;@requestCulture.TwoLetterISOLanguageName&nbsp;<span class="caret"></span></a>
    <ul class="dropdown-menu">
        @foreach (var ci in cultureItems)
        {
            <li><a asp-controller="Culture" asp-action="SetCulture" asp-route-returnUrl="@Context.Request.Path" asp-route-culture="@ci.Value">@ci.Text</a></li>
        }
    </ul>
</li>
